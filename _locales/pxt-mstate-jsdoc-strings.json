{
  "mmachine": "state machine",
  "mmachine.DoActivity": "Do Activity",
  "mmachine.DoActivity._cb": "code to run, body()",
  "mmachine.DoActivity._ms": "interval",
  "mmachine.DoActivity.execute": "execute DO",
  "mmachine.DoActivity.execute|param|tick": "the number of milliseconds elapsed since power on, control.millis().",
  "mmachine.DoActivity.nextTick": "The next tick to be callbacked.",
  "mmachine.EntryExitAction": "Entry/Exit Action",
  "mmachine.EntryExitAction.execute": "execute Entry/Exit.",
  "mmachine.State.doActivities": "array of do activity",
  "mmachine.State.entryActions": "array of entry action",
  "mmachine.State.exitActions": "array of exit action",
  "mmachine.State.stateId": "state id.",
  "mmachine.State.transitions": "array of transition",
  "mmachine.StateMachine._cbIdleUpdate": "idle update callback.",
  "mmachine.StateMachine._currentState": "current state",
  "mmachine.StateMachine._defaultStateId": "default state id for start.",
  "mmachine.StateMachine._nextProc": "next proc",
  "mmachine.StateMachine._states": "array of state.",
  "mmachine.StateMachine._triggerMessageQueues": "trigger queues, array of TriggerMessage.",
  "mmachine.StateMachine.getStateOrNew": "get State instance, or new.\n\n@returns instance of State, undefined if mname.NONE_ID (INITIAL/FINAL state)",
  "mmachine.StateMachine.getStateOrNew|param|stateId": "state id",
  "mmachine.StateMachine.machineId": "machine id",
  "mmachine.StateMachine.send": "send",
  "mmachine.StateMachine.send|param|triggerArgs": "trigger args",
  "mmachine.StateMachine.send|param|triggerId": "trigger ID",
  "mmachine.StateMachine.start": "start\n\n@returns started",
  "mmachine.StateMachine.start|param|stateId": "state ID",
  "mmachine.StateMachine.update": "update",
  "mmachine.Transition": "Transition",
  "mmachine.Transition.execute": "execute Transition.",
  "mmachine.Transition.toStateIdList": "array of state id, transition to.",
  "mmachine.Transition.triggerId": "trigger id.",
  "mname": "state/trigger id:name",
  "mname.NONE_ID": "id:0 - INITIAL/FINAL/Completion Transition.",
  "mname.NONE_STR": "name:\"\" - INITIAL/FINAL/Completion Transition.",
  "mname.getNameIdOrNew": "get id, new if undefined\n\n@returns state/trigger id",
  "mname.getNameIdOrNew|param|name": "state name or trigger name",
  "mname.nameList": "array of state/trigger name, index is id.\ndefault: [NONE_STR,]",
  "mstate": "mstate blocks\nDefining blocks: https://makecode.com/defining-blocks\nPlayground: https://makecode.com/playground\nicon: a Unicode identifier for an icon from the Font Awesome icon set.\nhttp://fontawesome.io/icons",
  "mstate._simuConvName": "convert id (number) to state/trigger name (string)\n\n@returns state name (string) or trigger name (string): \"[id]\" if undefined",
  "mstate._simuConvName|param|nameId": "state id or trigger id",
  "mstate._simuLastDescriptionListUML": "UML last description list\n@returns list of description",
  "mstate._simuStateUml": "UML state",
  "mstate._simuStateUml|param|machineId": "machine ID",
  "mstate._simuStateUml|param|stateId": "state name",
  "mstate._simuTransitionUml": "UML transition",
  "mstate._simuTransitionUml|param|aTransIdList": "array of next state ID",
  "mstate._simuTransitionUml|param|machineId": "machine ID",
  "mstate._simuTransitionUml|param|stateId": "state ID",
  "mstate.declareCustomTransition": "declare custom transition.",
  "mstate.declareCustomTransition|param|aTransList": "array of next state name ",
  "mstate.declareCustomTransition|param|aTriggerName": "trigger name",
  "mstate.declareCustomTransition|param|body": "code to run",
  "mstate.declareDo": "declare DO activity.",
  "mstate.declareDo|param|aEvery": "interval time (milliseconds)",
  "mstate.declareDo|param|body": "code to run",
  "mstate.declareEntry": "declare ENTRY action.",
  "mstate.declareEntry|param|body": "code to run",
  "mstate.declareExit": "declare EXIT action.",
  "mstate.declareExit|param|body": "code to run",
  "mstate.declareSimpleTransition": "declare simple transition.",
  "mstate.declareSimpleTransition|param|aToName": "next state nam",
  "mstate.declareSimpleTransition|param|aTriggerName": "trigger name",
  "mstate.declareTimeoutedTransition": "declare timeouted transition.",
  "mstate.declareTimeoutedTransition|param|aMs": "timeout (ms)",
  "mstate.declareTimeoutedTransition|param|aToName": "next state name",
  "mstate.defineState": "define state",
  "mstate.defineState|param|aStateMachine": "StateMachines",
  "mstate.defineState|param|aStateName": "state name",
  "mstate.defineState|param|body": "code to run",
  "mstate.descriptionUml": "description UML, PlantUML\nPlantUML Web server: http://www.plantuml.com/plantuml/",
  "mstate.descriptionsUml": "description UML, PlantUML\nPlantUML Web server: http://www.plantuml.com/plantuml/",
  "mstate.exportUml": "export UML, PlantUML\nPlantUML Web server: http://www.plantuml.com/plantuml/",
  "mstate.exportUml|param|aStateMachine": "@param aStateName default state",
  "mstate.getTriggerArgs": "trigger args.\n\n@returns trigger args",
  "mstate.getTriggerArgs|param|aStateMachine": "StateMachines",
  "mstate.isTimeouted": "is timeouted.",
  "mstate.isTimeouted|param|aMs": "timeout (milliseconds)",
  "mstate.isTimeouted|param|aStateMachine": "StateMachines",
  "mstate.mcontroller.defineState": "define state - machineId/stateId",
  "mstate.mcontroller.defineState|param|body": "code to run, body()",
  "mstate.mcontroller.defineState|param|machineId": "machine ID",
  "mstate.mcontroller.defineState|param|stateId": "state ID",
  "mstate.mcontroller.getDefineState": "get machine ID and state ID\n@returns [machine ID, state ID]",
  "mstate.mcontroller.getState": "get or create State of StateMachine\n\n\n@returns instance of State",
  "mstate.mcontroller.getStateMachine": "get or create StateMachine\n\n@returns instance of StateMachine",
  "mstate.mcontroller.getStateMachine|param|machineId": "machine ID",
  "mstate.mcontroller.getState|param|machineId": "machine ID",
  "mstate.mcontroller.getState|param|stateId": "state ID",
  "mstate.mcontroller.initialize": "initialize\n- update event handler\n- update event loop",
  "mstate.mcontroller.settings": "settings",
  "mstate.mcontroller.settings|param|eventId": "event ID",
  "mstate.mcontroller.settings|param|ms": "update loop interval (ms)",
  "mstate.sendTrigger": "send trigger",
  "mstate.sendTriggerArgs": "send trigger with args",
  "mstate.sendTriggerArgs|param|aStateMachine": "StateMachines",
  "mstate.sendTriggerArgs|param|aTriggerArgs": "args",
  "mstate.sendTriggerArgs|param|aTriggerName": "trigger name",
  "mstate.sendTrigger|param|aStateMachine": "StateMachines",
  "mstate.sendTrigger|param|aTriggerName": "trigger name",
  "mstate.settingsMachineEvent": "Internal event settings",
  "mstate.settingsMachineEvent|param|aStateMachine": "StateMachines",
  "mstate.settingsMachineEvent|param|eventId": "Event ID (default: 32868 = 32768 + 100)",
  "mstate.settingsMachineEvent|param|ms": "Event loop interval (default: 100ms)",
  "mstate.start": "start state machine",
  "mstate.start|param|aStateMachine": "StateMachines",
  "mstate.start|param|aStateName": "default state name",
  "mstate.transitTo": "transit to.",
  "mstate.transitTo|param|aStateMachine": "StateMachines",
  "mstate.transitTo|param|index": "states index]"
}